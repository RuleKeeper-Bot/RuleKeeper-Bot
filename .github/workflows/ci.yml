name: Build, Release, and Publish

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rulekeeper-bot:latest

  binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt pyinstaller python-dotenv

      - name: Build binary
        run: |
          pyinstaller --onefile --name rulekeeper-bot main.py

      # macOS: Build .dmg
      - name: Build .dmg on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install create-dmg
          mkdir -p dist/dmg-root
          cp dist/rulekeeper-bot dist/dmg-root/
          create-dmg dist/dmg-root $PWD/dist/rulekeeper-bot.dmg

      # Linux: Build AppImage and deb
      - name: Build AppImage and deb
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y appimagetool fpm
          mkdir -p AppDir/usr/bin
          cp dist/rulekeeper-bot AppDir/usr/bin/
          (cd AppDir && appimagetool . ../rulekeeper-bot.AppImage)
          fpm -s dir -t deb -n rulekeeper-bot -v 1.0.0 dist/rulekeeper-bot=/usr/bin/rulekeeper-bot

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: rulekeeper-bot-${{ matrix.os }}
          path: |
            dist/rulekeeper-bot*
            dist/*.dmg
            rulekeeper-bot.AppImage
            *.deb

  release:
    needs: binaries
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Delete old continuous release (if exists)
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: continuous
          github_token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Create new continuous release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: continuous
          name: Continuous Release
          body: "Latest build of rulekeeper-bot for all platforms."
          files: ./artifacts/**/*
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
